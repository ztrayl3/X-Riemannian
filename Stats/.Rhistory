A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
View(A18_MDM)
aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), sum)
View(Timewise)
Timewise
install.packages("plotly")
ggplotly(
ggplot(Timewise, aes(x=Time, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)")
)
library(readr)
library(ggplot2)
library(plotly)
ggplotly(
ggplot(Timewise, aes(x=Time, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)")
)
View(Timewise)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)")
)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
View(Channelwise)
Channelwise
barplot(Channelwise$GRoup.1)
barplot(Channelwise, x=Group.1, y=Weight)
??ggbarplot
ggbarplot(Channelwise, x=Group.1, y=Weight)
ggplot(data=Channelwise, aes(x=Group.1, y=Weight)) +
geom_bar(stat="identity")
ggplotly(
ggplot(data=Channelwise, aes(x=Group.1, y=Weight)) +
geom_bar(stat="identity")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -value), y=Weight)) +
geom_bar(stat="identity")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity")
)
smooth <- loess(Timewise$Weight ~ Timewise$Group.1)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
lines(predict(smooth), col='red', lwd=2)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_line(data = spline.d, aes(x = x, y = y))
#geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
)
spline.d <- as.data.frame(spline(Timewise$Group.1, Timewise$Weight))
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_line(data = spline.d, aes(x = x, y = y))
#geom_smooth(method="auto", se=TRUE, fullrange=FALSE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="auto", se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", se=TRUE, fullrange=TRUE, level=0.95)
)
formula = y ~ poly(x, 3)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method=formula, se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method=y ~ poly(x, 3), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="formula = y ~ poly(x, 3)", se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method=formula = y ~ poly(x, 3), se=TRUE, fullrange=TRUE, level=0.95)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="auto", se=TRUE, fullrange=TRUE, level=0.95)
)
?geom_smooth
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="glm", se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 3), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 7), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 9), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 20), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=TRUE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95)
)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
A18_MDM <- read_csv("A18_tangentspace+LR.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
#A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
#A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(right, color="#42b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
left <- subset(A18_MDM, A18_MDM$Predicted == "left")
right <- subset(A18_MDM, A18_MDM$Predicted == "right")
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(right, color="#42b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
)
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
View(right)
View(left)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
left <- subset(A18_MDM, A18_MDM$Predicted == "left")
right <- subset(A18_MDM, A18_MDM$Predicted == "right")
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
View(right)
View(left)
View(Timewise)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 4], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "left")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
View(Timewise.left)
View(Timewise.right)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, color="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
# Look at channel importance
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
# Look at channel importance
Channelwise <- aggregate(source[, 4], list(source$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
# Look at left and right, overlaid
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 4], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
