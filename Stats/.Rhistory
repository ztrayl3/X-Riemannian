A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
A18_MDM <- read_csv("A18_tangentspace+LR.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
#A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
#A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "right")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
library(readr)
library(ggplot2)
library(plotly)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
A18_MDM <- subset(A18_MDM, A18_MDM$Predicted == "left")
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Timewise <- aggregate(A18_MDM[, 4], list(A18_MDM$Time), mean)
#ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
geom_smooth(method="lm", formula = y ~ poly(x, 15), se=FALSE, fullrange=TRUE, level=0.95) +
xlab("Time (in EEG samples)")
#)
#ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
#)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(right, color="#42b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
left <- subset(A18_MDM, A18_MDM$Predicted == "left")
right <- subset(A18_MDM, A18_MDM$Predicted == "right")
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(right, color="#42b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
)
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
View(right)
View(left)
A18_MDM <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
left <- subset(A18_MDM, A18_MDM$Predicted == "left")
right <- subset(A18_MDM, A18_MDM$Predicted == "right")
ggplotly(
ggplot(left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
View(right)
View(left)
View(Timewise)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 4], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "left")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
View(Timewise.left)
View(Timewise.right)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, colour="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight, color="#000099")) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
# Look at channel importance
Channelwise <- aggregate(A18_MDM[, 4], list(A18_MDM$Channel), sum)
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_MDM.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
# Look at channel importance
Channelwise <- aggregate(source[, 4], list(source$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
# Look at left and right, overlaid
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 4], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
library(readr)
A18 <- read_csv("MS_DL_B/A18.csv", col_types = cols(...1 = col_skip(),
Predicted = col_factor(levels = c("left",
"right"))))
View(A18)
library(readr)
source <- read_csv("MS_DL_B/A18.csv", col_types = cols(...1 = col_skip(),
Predicted = col_factor(levels = c("left",
"right"))))
View(source)
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
Timewise <- aggregate(source[, 4], list(source$Time), sum)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
View(source)
View(Timewise)
# Look at timeseries importance
Timewise <- aggregate(source[, 5], list(source$Time), sum)
View(Timewise)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
Channelwise <- aggregate(source[, 5], list(source$Channel), sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
# Look at left and right, overlaid
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 4], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 4], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
Timewise.left <- subset(source, source$Predicted == "left")
Timewise.left <- aggregate(Timewise.left[, 5], list(Timewise.left$Time), sum)
Timewise.right <- subset(source, source$Predicted == "right")
Timewise.right <- aggregate(Timewise.right[, 5], list(Timewise.right$Time), sum)
ggplotly(
ggplot(Timewise.left, aes(x=Group.1, y=Weight)) +
geom_line(color="#69b3a2") +
geom_line(data = Timewise.right, aes(x=Group.1, y=Weight)) +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_1671123794633043.csv", col_types = cols(...1 = col_skip(), Predicted = col_factor(levels = c("left", "right"))))
View(source)
# Look at timeseries importance
Timewise <- aggregate(source[, 5], list(source$Time), sum)
source <- read_csv("A18_1671123794633043.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- aggregate(source[, 5], list(source$Time), sum)
View(source)
View(source)
# Look at timeseries importance
Timewise <- aggregate(source[, 7], list(source$Time), sum)
# Look at timeseries importance
Timewise <- aggregate(source[, 8], list(source$Time), sum)
View(Timewise)
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
View(Timewise)
ggplotly(
ggplot(Timewise, aes(x=Group.1, y=Weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
Timewise <- aggregate(weight~time, data=source, FUN=sum)
Timewise <- aggregate(weight~time, data=Timewise, FUN=sum)
View(Timewise)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)")
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth()
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 3), se = FALSE)
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 6), se = FALSE)
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 10), se = FALSE)
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 12), se = FALSE)
)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 15), se = FALSE)
)
# Look at channel importance
Channelwise <- data.frame(channel=source$Channel, weight=source$Weight)
Channelwise <- aggregate(weight~channel, data=Channelwise, FUN=sum)
Channelwise <- Channelwise[order(Channelwise$Group.1, decreasing = TRUE),]
Channelwise <- Channelwise[order(Channelwise$channel, decreasing = TRUE),]
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(Group.1, -Weight), y=Weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
ggplotly(
ggplot(data=Channelwise, aes(x=reorder(channel, -weight), y=weight)) +
geom_bar(stat="identity") +
xlab("Channel")
)
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
Timewise <- aggregate(weight~time, data=Timewise, FUN=mean)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 15), se = FALSE)
)
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
Timewise <- aggregate(weight~time, data=Timewise, FUN=mean(abs))
library(readr)
library(ggplot2)
library(plotly)
source <- read_csv("A18_1671123794633043.csv", col_types = cols(...1 = col_skip()))
Fun <- function(x) {
return(mean(abs(x)))
}
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
Timewise <- aggregate(weight~time, data=Timewise, FUN=mean(abs))
source <- read_csv("A18_1671123794633043.csv", col_types = cols(...1 = col_skip()))
Fun <- function(x) {
return(mean(abs(x)))
}
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
Timewise <- aggregate(weight~time, data=Timewise, FUN=Fun)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 15), se = FALSE)
)
source <- read_csv("A18_1671123794633043.csv", col_types = cols(...1 = col_skip()))
# Look at timeseries importance
Timewise <- data.frame(time=source$Time, weight=source$Weight)
Timewise <- aggregate(weight~time, data=Timewise, FUN=sum)
ggplotly(
ggplot(Timewise, aes(x=time, y=weight)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2") +
ylab("Feature Weight (LIME)") +
xlab("Time (in EEG samples)") +
geom_smooth(method = "lm", formula = y ~ poly(x, 15), se = FALSE)
)
